@using JobJournal.Data.Enums
@model IEnumerable<JobInfo>

@{
    ViewData["Title"] = "Job Infos";
}

<form asp-controller="JobInfos" asp-action="Index" method="get">
    <div class="row mb-3 align-items-center">
        <div class="col-md-4">
            <input type="text" name="searchTerm" class="form-control" placeholder="Search Company or Role..." value="@ViewData["CurrentFilter"]" />
        </div>

        <div class="col-md-3">
            <select name="statusFilter" asp-items="Html.GetEnumSelectList<ApplicationStatus>()" class="form-control form-select">
                <option value="">All Status</option>
            </select>
        </div>

        <div class="col-md-3">
            <button type="submit" class="btn btn-primary">Search</button>
            <a asp-action="Index" class="btn btn-outline-secondary">Clear</a>
        </div>


        <div class="col-md-2 text-end">
            <a asp-controller="JobInfos" asp-action="Create" class="btn btn-outline-success"> <i class="bi bi-plus-circle"></i> Add New</a>
            <a asp-controller="JobInfos" asp-action="ExportExcel" class="btn btn-sm btn-outline-primary" title="Export to Excel"> <i class="bi bi-download"></i></a>
        </div>
    </div>
</form>

@if (Model.Any())
{
    <div class="table-responsive mb-5">
        <table class="table">
            <thead>
                <tr>
                    <td>Company Name</td>
                    <td>Role</td>
                    <td>Job Summary</td>
                    <td>Status</td>
                    <td>Applied via</td>
                    <td>Applied Time</td>
                    <td>Action</td>
                </tr>
            </thead>
            <tbody>
                @foreach (var job in Model)
                {
                    <tr>
                        <td>@job.companyName</td>
                        <td>@job.role</td>
                        <td>@job.jobSummary</td>
                        <td>
                            <span class="status-@job.applicationStatus.ToString() px-2 py-1 rounded">
                                @job.applicationStatus
                            </span>
                        </td>
                        <td>@job.appliedVia</td>
                        <td>@job.appliedTime.ToString("MMMM d,yyyy")</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@job.id" class="btn btn-sm btn-outline-primary me-1" title="Edit">
                                <i class="bi bi-pencil"></i>
                            </a>

                            <a asp-action="Delete" asp-route-id="@job.id" class="btn btn-sm btn-outline-danger me-1" title="Delete">
                                <i class="bi bi-trash"></i>
                            </a>

                            <button type="button"
                                    class="btn btn-sm btn-outline-info note-trigger"
                                    title="View Notes"
                                    data-bs-toggle="modal"
                                    data-bs-target="#notesModal"
                                    data-note-content="@job.notes">
                                <i class="bi bi-chat-text chat-icon-xs"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="text-center py-5 my-5">
        <h2 class="display-6 text-muted mb-4">
            <i class="bi bi-lightbulb" style="font-size: 3rem;"></i><br />
            Ready to Track Your Job Search?
        </h2>
        <p class="lead text-muted mb-4">
            This is where you'll see all your job applications.<br />
            No entries yet? Let's add your first one and start monitoring your progress!
        </p>
        <a asp-controller="JobInfos" asp-action="Create" class="btn btn-lg btn-success">
            <i class="bi bi-plus-circle me-2"></i> Add Your First Application
        </a>
    </div>
}

@* Modals for notes and toast messages *@
@if (TempData["JobCreatedMessage"] != null || TempData["JobEditedMessage"] != null || TempData["JobDeletedMessage"] != null)
{
    <div aria-live="polite" aria-atomic="true" class="position-relative">
        <div class="toast-container position-fixed bottom-0 end-0 p-3">

            @if (TempData["JobCreatedMessage"] != null)
            {
                <div class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="5000">
                    <div class="d-flex">
                        <div class="toast-body">
                            @TempData["JobCreatedMessage"]
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            }

            @if (TempData["JobEditedMessage"] != null)
            {
                <div class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="5000">
                    <div class="d-flex">
                        <div class="toast-body">
                            @TempData["JobEditedMessage"]
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            }

            @if (TempData["JobDeletedMessage"] != null)
            {
                <div class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="5000">
                    <div class="d-flex">
                        <div class="toast-body">
                            @TempData["JobDeletedMessage"]
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            }
        </div>
    </div>
}

@* Notes Modal Structure *@
<div class="modal fade" id="notesModal" tabindex="-1" aria-labelledby="notesModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="notesModalLabel">Job Application Notes</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" xintegrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var toastElList = [].slice.call(document.querySelectorAll('.toast'))
            var toastList = toastElList.map(function (toastEl) {
                return new bootstrap.Toast(toastEl)
            })

            toastList.forEach(toast => toast.show());

            var notesModal = document.getElementById('notesModal');
            notesModal.addEventListener('show.bs.modal', function (event) {

                var button = event.relatedTarget;

                var noteContent = button.getAttribute('data-note-content');

                var modalBody = notesModal.querySelector('.modal-body');
                modalBody.textContent = noteContent || "No notes available.";
            });
        });
    </script>
}
