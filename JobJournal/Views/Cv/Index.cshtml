@model JobJournal.Models.CvBuilderViewModel

@{
    ViewData["Title"] = "CV Builder";
}

<script src="https://cdn.tailwindcss.com"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" />


<style>
    body {
        font-family: 'Inter', sans-serif;
    }

    .sidebar-link.active {
        background-color: #e5e7eb;
        border-left-color: #4f46e5;
    }

    .sidebar-link-compact {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
        padding: 0.75rem;
    }

        .sidebar-link-compact .icon {
            margin-bottom: 0.25rem;
        }

    .cv-section-title {
        border-bottom: 2px solid #e2e8f0;
        padding-bottom: 0.5rem;
        margin-bottom: 1rem;
        font-size: 1.25rem;
        font-weight: 600;
        color: #1a202c;
    }
</style>


<div class="flex h-screen bg-gray-50">

    <div class="w-1/6 p-4 md:p-8 bg-gray-100 border-r border-gray-200 overflow-y-auto">
        <h2 class="text-3xl font-bold text-gray-800 mb-6 hidden md:block">CV</h2>
        <nav class="bg-white p-4 rounded-lg shadow-sm border border-gray-200">
            <ul class="space-y-2">
                <li>
                    <a href="#" class="sidebar-link active block p-2 rounded-md text-gray-700 hover:bg-gray-200 transition-colors border-l-4 border-l-indigo-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sidebar-link-compact" data-target="personal-details-form">
                        <i class="fa-solid fa-user-pen text-xl icon"></i>
                        <span class="text-xs">Personal</span>
                    </a>
                </li>
                <li>
                    <a href="#" class="sidebar-link block p-2 rounded-md text-gray-700 hover:bg-gray-200 transition-colors border-l-4 border-l-transparent focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sidebar-link-compact" data-target="education-form">
                        <i class="fa-solid fa-graduation-cap text-xl icon"></i>
                        <span class="text-xs">Education</span>
                    </a>
                </li>
                <li>
                    <a href="#" class="sidebar-link block p-2 rounded-md text-gray-700 hover:bg-gray-200 transition-colors border-l-4 border-l-transparent focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sidebar-link-compact" data-target="experience-form">
                        <i class="fa-solid fa-briefcase text-xl icon"></i>
                        <span class="text-xs">Experience</span>
                    </a>
                </li>
                <li>
                    <a href="#" class="sidebar-link block p-2 rounded-md text-gray-700 hover:bg-gray-200 transition-colors border-l-4 border-l-transparent focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sidebar-link-compact" data-target="projects-form">
                        <i class="fa-solid fa-flask text-xl icon"></i>
                        <span class="text-xs">Projects</span>
                    </a>
                </li>
                <li>
                    <a href="#" class="sidebar-link block p-2 rounded-md text-gray-700 hover:bg-gray-200 transition-colors border-l-4 border-l-transparent focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sidebar-link-compact" data-target="skills-form">
                        <i class="fa-solid fa-code text-xl icon"></i>
                        <span class="text-xs">Skills</span>
                    </a>
                </li>
                <li>
                    <a href="#" id="share-cv-button" class="block p-2 rounded-md text-gray-600 hover:bg-gray-100 transition-colors border-l-4 border-l-transparent focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sidebar-link-compact">
                        <i class="fa-solid fa-file-arrow-down text-xl icon"></i>
                        <span class="text-xs">Share CV</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>

    <div class="flex-1 flex overflow-hidden">
        <div class="w- p-4 md:p-8 overflow-y-auto">
            <div id="personal-details-form" class="cv-form">
                <h3 class="text-xl font-semibold text-gray-700 mb-4">Personal Details</h3>
                <form asp-controller="Cv" asp-action="SaveCvProfile" method="post" class="space-y-4">
                    <input type="hidden" name="activeTab" value="personal-details-form" />
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label asp-for="CvProfile.FirstName" class="block text-sm font-medium text-gray-700">First Name</label>
                            <input asp-for="CvProfile.FirstName" value="@(string.IsNullOrEmpty(Model.CvProfile?.FirstName) ? "Tirth" : Model.CvProfile.FirstName)" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm live-update" data-preview-target="preview-first-name" />
                            <span asp-validation-for="CvProfile.FirstName" class="text-red-500 text-sm"></span>
                        </div>
                        <div>
                            <label asp-for="CvProfile.LastName" class="block text-sm font-medium text-gray-700">Last Name</label>
                            <input asp-for="CvProfile.LastName" value="@(string.IsNullOrEmpty(Model.CvProfile?.LastName) ? "Rai" : Model.CvProfile.LastName)" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm live-update" data-preview-target="preview-last-name" />
                            <span asp-validation-for="CvProfile.LastName" class="text-red-500 text-sm"></span>
                        </div>
                        <div>
                            <label asp-for="CvProfile.Designation" class="block text-sm font-medium text-gray-700">Designation</label>
                            <input asp-for="CvProfile.Designation" value="@(string.IsNullOrEmpty(Model.CvProfile?.Designation) ? "Software Developer" : Model.CvProfile.Designation)" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm live-update" data-preview-target="preview-designation" />
                        </div>
                        <div>
                            <label asp-for="CvProfile.Phone" class="block text-sm font-medium text-gray-700">Phone</label>
                            <input asp-for="CvProfile.Phone" value="@(string.IsNullOrEmpty(Model.CvProfile?.Phone) ? "+977 98 xxx xx xxx" : Model.CvProfile.Phone)" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm live-update" data-preview-target="preview-phone" />
                        </div>
                        <div>
                            <label asp-for="CvProfile.Address" class="block text-sm font-medium text-gray-700">Address</label>
                            <input asp-for="CvProfile.Address" value="@(string.IsNullOrEmpty(Model.CvProfile?.Address) ? "Kathmandu - 10" : Model.CvProfile.Address)" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm live-update" data-preview-target="preview-address" />
                        </div>
                        <div>
                            <label asp-for="CvProfile.City" class="block text-sm font-medium text-gray-700">City</label>
                            <input asp-for="CvProfile.City" value="@(string.IsNullOrEmpty(Model.CvProfile?.City) ? "Kathmandu" : Model.CvProfile.City)" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm live-update" data-preview-target="preview-city" />
                        </div>
                    </div>
                    <div>
                        <label asp-for="CvProfile.Summary" class="block text-sm font-medium text-gray-700">Professional Summary</label>
                        <textarea asp-for="CvProfile.Summary" rows="4" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm live-update" data-preview-target="preview-summary">@(string.IsNullOrEmpty(Model.CvProfile?.Summary) ? "I am a software developer." : Model.CvProfile.Summary)</textarea>
                    </div>
                    <div>
                        <label asp-for="CvProfile.PhotoUrl" class="block text-sm font-medium text-gray-700">Profile Photo URL</label>
                        <input asp-for="CvProfile.PhotoUrl" value="@(Model.CvProfile?.PhotoUrl ?? "https://placehold.co/128x128/9CA3AF/FFFFFF?text=Photo")" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm live-update" data-preview-target="preview-photo" />
                    </div>
                    <button type="submit" class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors">
                        Save Profile
                    </button>
                </form>
            </div>

            <div id="education-form" class="cv-form hidden">
                <h3 class="text-xl font-semibold text-gray-700 mb-4">Education</h3>
                <div class="mt-4 space-y-4">
                    @foreach (var education in Model.Educations)
                    {
                        <div class="flex items-center justify-between p-3 border rounded-md">
                            <span class="text-sm font-medium text-gray-900">@education.Degree at @education.SchoolInstitution</span>
                            <form asp-controller="Cv" asp-action="DeleteEducation" method="post">
                                <input type="hidden" name="id" value="@education.Id" />
                                <input type="hidden" name="activeTab" value="education-form" />
                                <button type="submit" class="text-red-500 hover:text-red-700 transition-colors">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </form>
                        </div>
                    }
                </div>
                <form asp-controller="Cv" asp-action="AddEducation" method="post" class="space-y-2 mt-4">
                    <input type="hidden" name="activeTab" value="education-form" />
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label asp-for="NewEducation.Degree" class="block text-sm font-medium text-gray-700">Degree / Field of Study</label>
                            <input asp-for="NewEducation.Degree" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-education-degree" />
                        </div>
                        <div>
                            <label asp-for="NewEducation.SchoolInstitution" class="block text-sm font-medium text-gray-700">School / Institution</label>
                            <input asp-for="NewEducation.SchoolInstitution" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-school-institution" />
                        </div>
                        <div>
                            <label asp-for="NewEducation.StartYear" class="block text-sm font-medium text-gray-700">Start Year</label>
                            <input asp-for="NewEducation.StartYear" type="number" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-start-year" />
                        </div>
                        <div>
                            <label asp-for="NewEducation.GraduationYear" class="block text-sm font-medium text-gray-700">Graduation Year</label>
                            <input asp-for="NewEducation.GraduationYear" type="number" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-graduationn-year" />
                        </div>
                    </div>
                    <button type="submit" class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors">
                        Add Education
                    </button>
                </form>
            </div>

            <div id="experience-form" class="cv-form hidden">
                <h3 class="text-xl font-semibold text-gray-700 mb-4">Experience</h3>
                <div class="mt-4 space-y-4">
                    @foreach (var experience in Model.Experiences)
                    {
                        <div class="flex items-center justify-between p-3 border rounded-md">
                            <span class="text-sm font-medium text-gray-900">@experience.JobTitle at @experience.EmployerOrganization</span>
                            <form asp-controller="Cv" asp-action="DeleteExperience" method="post">
                                <input type="hidden" name="id" value="@experience.Id" />
                                <input type="hidden" name="activeTab" value="experience-form" />
                                <button type="submit" class="text-red-500 hover:text-red-700 transition-colors">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </form>
                        </div>
                    }
                </div>
                <form asp-controller="Cv" asp-action="AddExperience" method="post" class="space-y-2 mt-4">
                    <input type="hidden" name="activeTab" value="experience-form" />
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label asp-for="NewExperience.JobTitle" class="block text-sm font-medium text-gray-700">Job Title</label>
                            <input asp-for="NewExperience.JobTitle" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-experience-jobtitle" />
                        </div>
                        <div>
                            <label asp-for="NewExperience.EmployerOrganization" class="block text-sm font-medium text-gray-700">Employer / Organization</label>
                            <input asp-for="NewExperience.EmployerOrganization" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-experience-org" />
                        </div>
                        <div>
                            <label asp-for="NewExperience.StartDate" class="block text-sm font-medium text-gray-700">Start Date</label>
                            <input asp-for="NewExperience.StartDate" type="date" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-experience-startdate" />
                        </div>
                        <div>
                            <label asp-for="NewExperience.EndDate" class="block text-sm font-medium text-gray-700">End Date</label>
                            <input asp-for="NewExperience.EndDate" type="date" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-experience-enddate" />
                        </div>
                    </div>
                    <div>
                        <label asp-for="NewExperience.Description" class="block text-sm font-medium text-gray-700">Description</label>
                        <textarea asp-for="NewExperience.Description" rows="3" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-experience-desc"></textarea>
                    </div>
                    <button type="submit" class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors">
                        Add Experience
                    </button>
                </form>
            </div>

            <div id="projects-form" class="cv-form hidden">
                <h3 class="text-xl font-semibold text-gray-700 mb-4">Projects</h3>
                <div class="mt-4 space-y-4">
                    @foreach (var project in Model.Projects)
                    {
                        <div class="flex items-center justify-between p-3 border rounded-md">
                            <span class="text-sm font-medium text-gray-900">@project.Title</span>
                            <form asp-controller="Cv" asp-action="DeleteProject" method="post">
                                <input type="hidden" name="id" value="@project.Id" />
                                <input type="hidden" name="activeTab" value="projects-form" />
                                <button type="submit" class="text-red-500 hover:text-red-700 transition-colors">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </form>
                        </div>
                    }
                </div>
                <form asp-controller="Cv" asp-action="AddProject" method="post" class="space-y-2 mt-4">
                    <input type="hidden" name="activeTab" value="projects-form" />
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label asp-for="NewProject.Title" class="block text-sm font-medium text-gray-700">Title</label>
                            <input asp-for="NewProject.Title" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-project-title" />
                        </div>
                        <div>
                            <label asp-for="NewProject.ProjectLink" class="block text-sm font-medium text-gray-700">Project Link</label>
                            <input asp-for="NewProject.ProjectLink" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-project-link" />
                        </div>
                    </div>
                    <div>
                        <label asp-for="NewProject.Description" class="block text-sm font-medium text-gray-700">Description</label>
                        <textarea asp-for="NewProject.Description" rows="3" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-project-desc"></textarea>
                    </div>
                    <button type="submit" class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors">
                        Add Project
                    </button>
                </form>
            </div>

            <div id="skills-form" class="cv-form hidden">
                <h3 class="text-xl font-semibold text-gray-700 mb-4">Skills</h3>
                <div class="mt-4 space-y-4">
                    <div class="flex flex-wrap gap-2">
                        @foreach (var skill in Model.Skills)
                        {
                            <div class="flex items-center gap-2 bg-indigo-100 text-indigo-800 text-sm font-medium px-2.5 py-1 rounded-full">
                                <span>@skill.Name</span>
                                <form asp-controller="Cv" asp-action="DeleteSkill" method="post" class="inline-block">
                                    <input type="hidden" name="id" value="@skill.Id" />
                                    <input type="hidden" name="activeTab" value="skills-form" />
                                    <button type="submit" class="text-indigo-500 hover:text-indigo-700 transition-colors">
                                        <i class="fa-solid fa-xmark"></i>
                                    </button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
                <form asp-controller="Cv" asp-action="AddSkill" method="post" class="mt-4 flex gap-2">
                    <input type="hidden" name="activeTab" value="skills-form" />
                    <input asp-for="NewSkill.Name" placeholder="Enter a new skill" class="flex-1 rounded-md border-gray-300 shadow-sm sm:text-sm live-update" data-preview-target="preview-new-skill-name" />
                    <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors">
                        Add Skill
                    </button>
                </form>
            </div>
        </div>
    </div>

    <div class="w-1/2 p-4 md:p-8 bg-white overflow-y-auto border-l border-gray-200">
        <div class="cv-preview">
            <div class="flex flex-col items-center mb-6 text-center">
                <div class="w-32 h-32 rounded-full mb-4 overflow-hidden bg-gray-200 flex items-center justify-center">
                    <img id="preview-photo" src="@(string.IsNullOrEmpty(Model.CvProfile?.PhotoUrl) ? "https://placehold.co/128x128/9CA3AF/FFFFFF?text=Photo" : Model.CvProfile.PhotoUrl)" alt="Profile Photo" class="w-full h-full object-cover" onerror="this.onerror=null;this.src='https://placehold.co/128x128/9CA3AF/FFFFFF?text=Photo';">
                </div>
                <h1 class="text-3xl font-bold text-gray-900">
                    <span id="preview-first-name">@(Model.CvProfile?.FirstName ?? "Tirth")</span>
                    <span id="preview-last-name">@(Model.CvProfile?.LastName ?? "Rai")</span>
                </h1>
                <h2 id="preview-designation" class="text-xl text-600 font-semibold mt-1">@(Model.CvProfile?.Designation ?? "Software Developer")</h2>
                <div class="text-gray-600 mt-2">
                    <span id="preview-address">@(Model.CvProfile?.Address ?? "Kathmandu - 10")</span>,
                    <span id="preview-city">@(Model.CvProfile?.City ?? "Kathmandu")</span>
                    @if (!string.IsNullOrEmpty(Model.CvProfile?.Phone))
                    {
                        <span class="mx-2">|</span>
                    }
                    <span>Phone: <span id="preview-phone">@(Model.CvProfile?.Phone ?? "+977 98 xxx xx xxx")</span></span>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.CvProfile?.Summary))
            {
                <div class="mb-6">
                    <h3 class="cv-section-title">Professional Summary</h3>
                    <p id="preview-summary" class="text-gray-700 text-sm">@Html.Raw(Model.CvProfile?.Summary)</p>
                </div>
            }

            <div id="preview-education-section" class="mb-6 @(Model.Educations.Any() || (Model.NewEducation != null && (!string.IsNullOrEmpty(Model.NewEducation.Degree) || !string.IsNullOrEmpty(Model.NewEducation.SchoolInstitution) || Model.NewEducation.StartYear > 0 || Model.NewEducation.GraduationYear > 0)) ? "" : "hidden")">
                <h3 class="cv-section-title">Education</h3>
                <div class="space-y-4" id="preview-education-list">
                    @foreach (var education in Model.Educations)
                    {
                        <div class="preview-education-item">
                            <div class="flex justify-between items-start">
                                <h4 class="font-semibold text-gray-800">@education.Degree</h4>
                                <span class="text-gray-500 text-sm">
                                    @education.StartYear
                                    @if (education.GraduationYear > 0)
                                    {
                                        <span> - </span>
                                    }
                                    @education.GraduationYear
                                </span>
                            </div>
                            <div class="text-sm text-gray-600">@education.SchoolInstitution</div>
                        </div>
                    }

                    <div class="preview-education-item border-l-2 pl-2 border-gray-300">
                        <div class="flex justify-between items-start">
                            <h4 class="font-semibold text-gray-800" id="preview-new-education-degree"></h4>
                            <span class="text-gray-500 text-sm">
                                <span id="preview-new-start-year"></span>
                                <span id="education-date-separator" class="hidden"> - </span>
                                <span id="preview-new-graduationn-year"></span>
                            </span>
                        </div>
                        <div class="text-sm text-gray-600" id="preview-new-school-institution"></div>
                    </div>
                </div>
            </div>

            <div id="preview-experience-section" class="mb-6 @(Model.Experiences.Any() ? "" : "hidden")">
                <h3 class="cv-section-title">Experience</h3>
                <div class="space-y-4" id="preview-experience-list">
                    @foreach (var experience in Model.Experiences)
                    {
                        <div class="preview-experience-item">
                            <div class="flex justify-between items-start">
                                <h4 class="font-semibold text-gray-800">@experience.JobTitle</h4>
                                <span class="text-gray-500 text-sm">
                                    @experience.StartDate.ToString("yyyy-MM-dd")
                                    @if (experience.EndDate.HasValue)
                                    {
                                        <span> - </span>
                                    }
                                    @experience.EndDate?.ToString("yyyy-MM-dd")
                                </span>
                            </div>
                            <div class="text-sm text-gray-600">@experience.EmployerOrganization</div>
                            <p class="text-sm text-gray-700 mt-1">@experience.Description</p>
                        </div>
                    }
                    <div class="preview-experience-item border-l-2 pl-2 border-gray-300">
                        <div class="flex justify-between items-start">
                            <h4 class="font-semibold text-gray-800" id="preview-new-experience-jobtitle"></h4>
                            <span class="text-gray-500 text-sm">
                                <span id="preview-new-experience-startdate"></span>
                                <span id="experience-date-separator" class="hidden"> - </span>
                                <span id="preview-new-experience-enddate"></span>
                            </span>
                        </div>
                        <div class="text-sm text-gray-600" id="preview-new-experience-org"></div>
                        <p class="text-sm text-gray-700 mt-1" id="preview-new-experience-desc"></p>
                    </div>
                </div>
            </div>

            <div id="preview-projects-section" class="mb-6 @(Model.Projects.Any() ? "" : "hidden")">
                <h3 class="cv-section-title">Projects</h3>
                <div class="space-y-4" id="preview-projects-list">
                    @foreach (var project in Model.Projects)
                    {
                        <div class="preview-project-item">
                            <h4 class="font-semibold text-gray-800">@project.Title</h4>
                            <a href="@project.ProjectLink" class="text-indigo-600 hover:underline text-sm" target="_blank">@project.ProjectLink</a>
                            <p class="text-sm text-gray-700 mt-1">@project.Description</p>
                        </div>
                    }
                    <div class="preview-project-item border-l-2 pl-2 border-gray-300">
                        <h4 class="font-semibold text-gray-800" id="preview-new-project-title"></h4>
                        <a href="#" class="text-indigo-600 hover:underline text-sm hidden" target="_blank" id="preview-new-project-link"></a>
                        <p class="text-sm text-gray-700 mt-1" id="preview-new-project-desc"></p>
                    </div>
                </div>
            </div>

            <div id="preview-skills-section" class="mb-6 @(Model.Skills.Any() ? "" : "hidden")">
                <h3 class="cv-section-title">Skills</h3>
                <div class="flex flex-wrap gap-2" id="preview-skills-list">
                    @foreach (var skill in Model.Skills)
                    {
                        <span class="bg-gray-200 text-gray-800 text-xs font-medium px-2.5 py-0.5 rounded-full preview-skill-item">@skill.Name</span>
                    }
                    <span class="bg-gray-200 text-gray-800 text-xs font-medium px-2.5 py-0.5 rounded-full border-l-2 pl-2 border-gray-300 preview-skill-item" id="preview-new-skill-name"></span>
                </div>
            </div>
        </div>
    </div>


</div>


<div id="download-modal" class="hidden fixed inset-0 z-50 overflow-y-auto bg-gray-900 bg-opacity-75 flex justify-center items-center">

    <div class="bg-white rounded-lg shadow-xl p-6 w-96 max-w-full m-4 transform transition-all sm:my-8 sm:align-middle sm:p-6">

        <div class="sm:flex sm:items-start">
            <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                <h3 class="text-xl leading-6 font-medium text-gray-900" id="modal-title">
                    Download CV
                </h3>
                <div class="mt-2">
                    <p class="text-sm text-gray-500">
                        Choose a format to download your CV.
                    </p>
                </div>
            </div>
        </div>

        <div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
            <button id="download-pdf-button" type="button" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:ml-3 sm:w-auto sm:text-sm">
                Download as PDF
            </button>
            <button id="cancel-modal" type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:w-auto sm:text-sm">
                Cancel
            </button>
        </div>
    </div>
</div>




<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const sidebarLinks = document.querySelectorAll('.sidebar-link');
        const formSections = document.querySelectorAll('.cv-form');
        const cvPreview = document.querySelector('.cv-preview');

        function setActiveTab(targetId) {
            sidebarLinks.forEach(item => {
                item.classList.remove('active');
                item.classList.add('border-l-transparent');
                item.classList.remove('border-l-indigo-500');
            });
            formSections.forEach(section => section.classList.add('hidden'));

            const activeLink = document.querySelector(`[data-target="${targetId}"]`);
            if (activeLink) {
                activeLink.classList.add('active');
                activeLink.classList.remove('border-l-transparent');
                activeLink.classList.add('border-l-indigo-500');
            }
            const activeForm = document.getElementById(targetId);
            if (activeForm) {
                activeForm.classList.remove('hidden');
            }
        }

        sidebarLinks.forEach(link => {
            link.addEventListener('click', function (e) {
                e.preventDefault();
                const targetId = this.getAttribute('data-target');
                setActiveTab(targetId);
                window.location.hash = targetId;
            });
        });

        const liveUpdateFields = document.querySelectorAll('.live-update');
        liveUpdateFields.forEach(field => {
            field.addEventListener('input', function () {
                const targetId = this.getAttribute('data-preview-target');
                const targetElement = document.getElementById(targetId);
                if (targetElement) {
                    if (targetElement.tagName === 'IMG') {
                        targetElement.src = this.value || 'https://placehold.co/128x128/9CA3AF/FFFFFF?text=Photo';
                    } else {
                        targetElement.textContent = this.value;
                    }
                }
            });
        });

        if (window.location.hash) {
            const targetId = window.location.hash.substring(1);
            setActiveTab(targetId);
        } else {
            setActiveTab('personal-details-form');
        }

        function clearFormInputs(form) {
            form.querySelectorAll('input:not([type="hidden"]), textarea').forEach(input => {
                input.value = '';
            });
        }

        function setupFormListeners() {
            document.querySelectorAll('.cv-form form').forEach(form => {
                form.removeEventListener('submit', handleFormSubmission);
            });
            document.querySelectorAll('.cv-form form').forEach(form => {
                form.addEventListener('submit', handleFormSubmission);
            });
        }

        async function handleFormSubmission(e) {
            e.preventDefault();
            const form = this;
            const formData = new FormData(form);
            const actionUrl = form.getAttribute('action');
            const formMethod = form.getAttribute('method');
            const activeTab = window.location.hash.substring(1) || 'personal-details-form';

            try {
                const response = await fetch(actionUrl, {
                    method: formMethod,
                    body: formData
                });
                if (response.ok) {
                    const updatedPageResponse = await fetch(`/Cv`);
                    const newPageHtml = await updatedPageResponse.text();
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(newPageHtml, 'text/html');
                    const updateAndReplace = (formId, previewId) => {
                        const newFormList = doc.getElementById(formId).querySelector('div.space-y-4, div.flex-wrap').innerHTML;
                        document.getElementById(formId).querySelector('div.space-y-4, div.flex-wrap').innerHTML = newFormList;
                        const newPreviewList = doc.getElementById(previewId).innerHTML;
                        document.getElementById(previewId).innerHTML = newPreviewList;
                    };
                    if (activeTab === 'education-form') {
                        updateAndReplace('education-form', 'preview-education-list');
                    } else if (activeTab === 'experience-form') {
                        updateAndReplace('experience-form', 'preview-experience-list');
                    } else if (activeTab === 'projects-form') {
                        updateAndReplace('projects-form', 'preview-projects-list');
                    } else if (activeTab === 'skills-form') {
                        updateAndReplace('skills-form', 'preview-skills-list');
                    }
                    const newCvPreview = doc.querySelector('.cv-preview').innerHTML;
                    cvPreview.innerHTML = newCvPreview;
                    if (form.getAttribute('action').includes('Add')) {
                        clearFormInputs(form);
                    }
                    setupFormListeners();
                    setActiveTab(activeTab);
                } else {
                    console.error('Form submission failed:', response.statusText);
                }
            } catch (error) {
                console.error('Error submitting form:', error);
            }
        }
        setupFormListeners();
        const educationStartYearInput = document.getElementById('NewEducation_StartYear');
        const educationGraduationYearInput = document.getElementById('NewEducation_GraduationYear');
        const educationSeparator = document.getElementById('education-date-separator');
        const experienceStartDateInput = document.getElementById('NewExperience_StartDate');
        const experienceEndDateInput = document.getElementById('NewExperience_EndDate');
        const experienceSeparator = document.getElementById('experience-date-separator');
        function toggleEducationSeparator() {
            if (educationStartYearInput.value || educationGraduationYearInput.value) {
                educationSeparator.classList.remove('hidden');
            } else {
                educationSeparator.classList.add('hidden');
            }
        }
        function toggleExperienceSeparator() {
            if (experienceStartDateInput.value || experienceEndDateInput.value) {
                experienceSeparator.classList.remove('hidden');
            } else {
                experienceSeparator.classList.add('hidden');
            }
        }
        educationStartYearInput.addEventListener('input', toggleEducationSeparator);
        educationGraduationYearInput.addEventListener('input', toggleEducationSeparator);
        experienceStartDateInput.addEventListener('input', toggleExperienceSeparator);
        experienceEndDateInput.addEventListener('input', toggleExperienceSeparator);
        toggleEducationSeparator();
        toggleExperienceSeparator();

        // Live update for project link
        const newProjectLinkInput = document.getElementById('NewProject_ProjectLink');
        const newProjectLinkPreview = document.getElementById('preview-new-project-link');
        newProjectLinkInput.addEventListener('input', function () {
            if (this.value) {
                newProjectLinkPreview.textContent = this.value;
                newProjectLinkPreview.href = this.value;
                newProjectLinkPreview.classList.remove('hidden');
            } else {
                newProjectLinkPreview.textContent = '';
                newProjectLinkPreview.href = '#';
                newProjectLinkPreview.classList.add('hidden');
            }
        });

        // Live update for skills
        const newSkillInput = document.getElementById('NewSkill_Name');
        const newSkillPreview = document.getElementById('preview-new-skill-name');
        if (newSkillInput && newSkillPreview) {
            newSkillPreview.style.display = newSkillInput.value.trim() !== '' ? 'inline-block' : 'none';
        }
        newSkillInput.addEventListener('input', function () {
            if (this.value.trim() !== '') {
                newSkillPreview.textContent = this.value;
                newSkillPreview.style.display = 'inline-block';
            } else {
                newSkillPreview.textContent = '';
                newSkillPreview.style.display = 'none';
            }
        });

        const shareCvButton = document.getElementById('share-cv-button');
        const downloadModal = document.getElementById('download-modal');
        const downloadPdfButton = document.getElementById('download-pdf-button');
        const cancelModalButton = document.getElementById('cancel-modal');

        shareCvButton.addEventListener('click', function (e) {
            e.preventDefault();
            downloadModal.classList.remove('hidden');
        });

        // Event listener to trigger the download
        downloadPdfButton.addEventListener('click', function () {
            const firstName = document.getElementById('preview-first-name').textContent;
            const lastName = document.getElementById('preview-last-name').textContent;
            const element = document.querySelector('.cv-preview');

            const options = {
                margin: [10, 10, 10, 10],
                filename: `${firstName}_${lastName}_CV.pdf`,
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2 },
                jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
            };

            html2pdf().set(options).from(element).save();
            downloadModal.classList.add('hidden');
        });

        // Event listener to close the modal
        cancelModalButton.addEventListener('click', function () {
            downloadModal.classList.add('hidden');
        });
    });
</script>